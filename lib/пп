   DropdownButton<String>(
              items: <String>['A', 'B', 'C', 'D'].map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              onChanged: (_) {},
            ),




            DropdownButtonFormField(
             decoration: InputDecoration(
             enabledBorder: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.blue, width: 2),
             borderRadius: BorderRadius.circular(20),
                              ),
             border: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.blue, width: 2),
             borderRadius: BorderRadius.circular(20),
                              ),
             filled: true,
             fillColor: Colors.blueAccent,
                            ),
             dropdownColor: Colors.blueAccent,
                            value: selectedValue,
             onChanged: (String? newValue) {
             setState(() {
             selectedValue = newValue!;
                              });
                            },
             items: dropdownItems)













             class SignUpScreen extends StatefulWidget {
               const SignUpScreen({super.key});





//!!!!!!!!!!!!!!!

import 'package:email_validator/email_validator.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter_application_1/registrazia.dart';
import 'package:flutter_application_1/reset_password_screen.dart';
import 'package:flutter_application_1/services/snack_bar.dart';


import 'chat.dart';
import 'main.dart';

class Profile extends StatefulWidget {
  const Profile({super.key});

  @override
  State<Profile> createState() => _ProfileState();
}

class _ProfileState extends State<Profile> {
  bool isHiddenPassword = true;
  TextEditingController emailTextInputController = TextEditingController();
  TextEditingController passwordTextInputController = TextEditingController();
  final formKey = GlobalKey<FormState>();
  final nameController = TextEditingController();
  final numberController = TextEditingController();
  final email1Controller = TextEditingController();

  @override
  void dispose() {
    emailTextInputController.dispose();
    passwordTextInputController.dispose();

    super.dispose();
  }

  void togglePasswordView() {
    setState(() {
      isHiddenPassword = !isHiddenPassword;
    });
  }

  Future<void> login() async {
    final navigator = Navigator.of(context);

    final isValid = formKey.currentState!.validate();
    if (!isValid) return;

    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: emailTextInputController.text.trim(),
        password: passwordTextInputController.text.trim(),
      );
    } on FirebaseAuthException catch (e) {
      print(e.code);

      if (e.code == 'user-not-found' || e.code == 'wrong-password') {
        SnackBarService.showSnackBar(
          context,
          'Неправильный email или пароль. Повторите попытку',
          true,
        );
        return;
      } else {
        SnackBarService.showSnackBar(
          context,
          'Неизвестная ошибка! Попробуйте еще раз или обратитесь в поддержку.',
          true,
        );
        return;
      }
    }

    Navigator.pushAndRemoveUntil<dynamic>(
      context,
      MaterialPageRoute<dynamic>(
        builder: (BuildContext context) => Mainpage(),
      ),
          (route) => false,//if you want to disable back feature set to false
    );

  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        toolbarHeight: 40,
        flexibleSpace: Container(
            decoration: BoxDecoration(
                image: DecorationImage(image: AssetImage("lib/assets/image/лого/fon1.jpg"),
                    fit: BoxFit.fill
                )
            )
        ),
        bottom: PreferredSize(
            preferredSize: const Size.fromHeight(4.0),
            child: Container(
              color: Colors.white,
              height: 2.5,
            )),
        centerTitle: true,
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            const Text(
              "  ",
              style: TextStyle(
                  color: Colors.white,
                  fontSize: 24,
                  fontFamily: 'Actay',
                  fontWeight: FontWeight.w700,
                  height: 0,
                  decoration: TextDecoration.none),
            ),
          ],
        ),
      ),
      body:
      Form(
        key: formKey,

        child:
        Container(
          decoration: const BoxDecoration(
            image: DecorationImage(
              image: AssetImage("lib/assets/image/BACKGROUND/Product.png"),
              fit: BoxFit.cover,
            ),
          ),
          height: 8000,
          child: Center(
            child: Container(
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10),
                color: Color.fromRGBO(31, 84, 96, 1.0),
                border: Border.all(color: Color(0xFFFFFFFF), width: 1.5),
              ),
              height: 500,
              margin: const EdgeInsets.symmetric(horizontal: 16),
              padding:
              const EdgeInsets.symmetric(horizontal: 18, vertical: 24),
              child: Column(
                children: [

                  const Text(
                    "Вход",
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 30,
                      fontWeight: FontWeight.w700,
                      height: 0,
                    ),
                  ),

                  const SizedBox(height: 30),

                  //ввод почты
                  TextFormField(
                    keyboardType: TextInputType.emailAddress,
                    autocorrect: false,
                    controller: emailTextInputController,
                    validator: (email) =>
                    email != null && !EmailValidator.validate(email)
                        ? 'Введите правильный Email'
                        : null,
                    decoration: const InputDecoration(
                      contentPadding: EdgeInsets.symmetric(horizontal: 10),
                      border: OutlineInputBorder(),
                      hintText: 'Введите Email',
                      hintStyle: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 16,
                        color: Colors.white,
                      ),
                    ),
                  ),

                  const SizedBox(height: 10),

                  //ввод пароля
                  TextFormField(
                    autocorrect: false,
                    controller: passwordTextInputController,
                    obscureText: isHiddenPassword,
                    validator: (value) => value != null && value.length < 6
                        ? 'Минимум 6 символов'
                        : null,
                    autovalidateMode: AutovalidateMode.onUserInteraction,
                    decoration: InputDecoration(
                      contentPadding: EdgeInsets.symmetric(horizontal: 10),
                      border: OutlineInputBorder(),
                      hintText: 'Введите пароль',
                      hintStyle: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 16,
                        color: Colors.white,
                      ),
                      suffix: InkWell(
                        onTap: togglePasswordView,
                        child: Icon(
                          isHiddenPassword
                              ? Icons.visibility_off
                              : Icons.visibility,
                          color: Colors.black,
                        ),
                      ),
                    ),
                  ),

                  const SizedBox(height: 0),

                  //кнопка сброса пароля
                  TextButton(
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ResetPasswordScreen(),
                        ),
                      );
                    },
                    child: const Text('Сбросить пароль',
                      style: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 13,
                        color: const Color.fromARGB(255, 0, 0, 0),
                      ),
                    ),
                  ),

                  const SizedBox(height: 15),

                  //кнопка войти

                  ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      shape:
                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),
                      padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
                      backgroundColor: const Color.fromARGB(255, 10, 58, 69),
                    ),

                    child:
                    const Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Text(
                          "Войти",
                          style: TextStyle(
                            fontFamily: 'Actay',
                            fontSize: 16,
                            color: Colors.white,
                          ),
                        ),
                      ],
                    ),
                    onPressed: login,
                  ),

                  const SizedBox(height: 0),

                  //кнопка зарегистрироваться
                  ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      shape:
                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),
                      padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
                      backgroundColor: const Color.fromARGB(255, 10, 58, 69),
                    ),

                    child:

                    const Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Text(
                          "Зарегистрироваться",
                          style: TextStyle(
                            fontFamily: 'Actay',
                            fontSize: 16,
                            color: Colors.white,
                          ),
                        ),
                      ],
                    ),
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => SignUpScreen(),
                        ),
                      );
                    },
                  ),

                  const SizedBox(height: 70),

                  //кнопка теххподдержки
                  ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      shape:
                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),
                      padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
                      backgroundColor: const Color.fromARGB(255, 10, 58, 69),
                    ),
                    child:
                    const Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        SizedBox(
                          width: 2,
                        ),
                        Text(
                          "Техподдержка",
                          style: TextStyle(
                            fontFamily: 'Actay',
                            fontSize: 20,
                            color: Colors.white,
                          ),
                        ),
                      ],
                    ),
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => LiveChat(),
                        ),
                      );
                    },
                  ),

                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}


//@@@@@@@@@@@@@@@@@@@@@@@@@

import 'package:flutter/material.dart';
import 'chat.dart';
import 'isrotia_pokypok.dart';
import 'korzina.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';


class Profile extends StatefulWidget {
  const Profile({super.key});

  @override
  State<Profile> createState() => _ProfileState();
}

class _ProfileState extends State<Profile> {

  final nameController = TextEditingController();
  final numberController = TextEditingController();
  final email1Controller = TextEditingController();

  @override
  Widget build(BuildContext context) {


    return Scaffold(
      backgroundColor: const Color.fromARGB(200, 10, 58, 69),
      appBar: AppBar(
        toolbarHeight: 40,
        automaticallyImplyLeading: false,
        flexibleSpace: Container(
            decoration: BoxDecoration(
                image: DecorationImage(image: AssetImage("lib/assets/image/лого/profil.jpg"),
                    fit: BoxFit.fill
                )
            )
        ),
        bottom: PreferredSize(
            preferredSize: const Size.fromHeight(4.0),
            child: Container(
              color: Colors.white,
              height: 2.0,
            )),
      ),
      body:
      SingleChildScrollView(
        physics: BouncingScrollPhysics(),
      child: Column(
          children: [
      Padding(
      padding: EdgeInsets.all(30),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Expanded(
            flex: 3,
            child: CircleAvatar(
              radius: 70,
              backgroundImage: NetworkImage('https://hombex.com/assets/img/icon_profile.png'),
            ),),

          Expanded(
              flex: 1,
              child: SizedBox()),

          Expanded(
            flex: 5,
            child:  Column(
                children: [

                  Text('Ваши данные',
                    style: TextStyle(fontSize: 24, color: Colors.white,),
                  ),

                  const SizedBox(
                    height: 10,
                  ),

                  const TextField(
                    controller: nameController,
                    textAlign: TextAlign.start,
                    style: TextStyle(
                      fontFamily: 'Actay',
                      fontSize: 20,
                      color: Colors.white,
                    ),
                    decoration: InputDecoration(
                      contentPadding: EdgeInsets.symmetric(horizontal: 20),
                      border: OutlineInputBorder(
                        borderSide: BorderSide(
                            color: Color.fromARGB(255, 255, 255, 255),
                            width: 1),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 255, 255),
                        ),
                      ),
                      hintStyle: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 20,
                        color: Colors.white,
                      ),
                      hintText: "Имя",
                      hintFadeDuration: Durations.extralong1,
                    ),
                  ),

                  const SizedBox(
                    height: 10,
                  ),

                  const TextField(
                    textAlign: TextAlign.start,
                    style: TextStyle(
                      fontFamily: 'Actay',
                      fontSize: 20,
                      color: Colors.white,
                    ),
                    decoration: InputDecoration(
                      contentPadding: EdgeInsets.symmetric(horizontal: 20),
                      border: OutlineInputBorder(
                        borderSide: BorderSide(
                            color: Color.fromARGB(255, 255, 255, 255),
                            width: 1),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 255, 255),
                        ),
                      ),
                      hintStyle: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 20,
                        color: Colors.white,
                      ),
                      hintText: "Номер телеф.",
                      hintFadeDuration: Durations.extralong1,
                    ),
                  ),

                  const SizedBox(
                    height: 10,
                  ),

                  const TextField(
                    textAlign: TextAlign.start,
                    style: TextStyle(
                      fontFamily: 'Actay',
                      fontSize: 20,
                      color: Colors.white,
                    ),
                    decoration: InputDecoration(
                      contentPadding: EdgeInsets.symmetric(horizontal: 20),
                      border: OutlineInputBorder(
                        borderSide: BorderSide(
                            color: Color.fromARGB(255, 255, 255, 255),
                            width: 1),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 255, 255),
                        ),
                      ),
                      hintStyle: TextStyle(
                        fontFamily: 'Actay',
                        fontSize: 20,
                        color: Colors.white,
                      ),
                      hintText: "Почта",
                      hintFadeDuration: Durations.extralong1,
                    ),
                  ),
                  const SizedBox(
                    height: 10,
                  ),

                  Text('Как сообщить Вам данные о заказе?',
                    style: TextStyle(fontSize: 19, color: Colors.white,),
                  ),

                  const SizedBox(
                    height: 1,
                  ),

                  //выпадающий список
                  DropdownButton<String>(
                    iconSize: 24,
                    elevation: 16,
                    value: dropdownValue,
                    items: items.map<DropdownMenuItem<String>>((String value) {
                      return DropdownMenuItem<String>(value: value, child: Text(value));
                    }).toList(),
                    onChanged: (String? newValue) {
                      setState(() {
                        dropdownValue = newValue ?? '';
                      });
                    },
                  ),
                ]


            ),
          ),

        ],

      ),
    ),






      Padding(

        padding: const EdgeInsets.symmetric(vertical: 3),
        child: ElevatedButton(
          style: ElevatedButton.styleFrom(
            shape:
                RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),
            padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
            backgroundColor: const Color.fromARGB(255, 10, 58, 69),

          ),


          child:


          const Row(
            mainAxisSize: MainAxisSize.min,
            children: [
              SizedBox(
                width: 2,
              ),
              Text(
                "История покупок",
                style: TextStyle(
                  fontFamily: 'Actay',
                  fontSize: 22,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => PurchaseHistory(),
              ),
            );
          },
        ),
      ),
            const SizedBox(
              height: 20,
            ),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                shape:
                RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),
                padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
                backgroundColor: const Color.fromARGB(255, 10, 58, 69),

              ),


              child:


              const Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  SizedBox(
                    width: 2,
                  ),
                  Text(
                    "Техподдержка",
                    style: TextStyle(
                      fontFamily: 'Actay',
                      fontSize: 20,
                      color: Colors.white,
                    ),
                  ),
                ],
              ),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => LiveChat(),
                  ),
                );
              },
            ),
    ],
    ),
      ),
    );
  }
}
















